# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  workingDirCatalog: './Chapter 18/Catalog'
  solutionPathCatalog: ./Chapter 18/Catalog/VinylStore.Catalog.API.sln
  workingDirCart: ./Chapter 18/Cart
  solutionPathCart: ./Chapter 18/Cart/VinylStore.Cart.API.sln

steps:
- task: DotNetCoreInstaller@0
  displayName: 'Install .net core 3.0 (preview)'
  inputs:
    version: '3.0.100-rc1-014190'
- task: DotNetCoreCLI@2
  displayName: 'Building Catalog'
  inputs:
    command: 'build'
    projects: $(solutionPathCatalog)
- task: DotNetCoreCLI@2
  displayName: 'Testing Catalog'
  inputs:
    command: 'test'
    workingDirectory: $(workingDirCatalog)
- task: DotNetCoreCLI@2
  displayName: 'Building Cart'
  inputs:
    command: 'build'
    projects: $(solutionPathCart)
- task: DotNetCoreCLI@2
  displayName: 'Testing Cart'
  inputs:
    command: 'test'
    workingDirectory: $(workingDirCart)
- script: |
    docker-compose up --force-recreate --build --detach
  workingDirectory: $(workingDirCatalog)
  displayName: 'Docker compose build'
- task: Bash@3
  displayName: "Verify Docker container"
  inputs:
    targetType: 'inline'
    script: |
      sleep 30
              testCondition=$(docker inspect --format="{{.State.Running}}" catalog_api)
              if [ "$testCondition" == "false" ]; then
                echo "The container is not running" >&2
                exit 1;
              else
                echo "The container is running" >&2
                exit 0
              fi
- script: |
    docker-compose -f docker-compose.yml down
  workingDirectory: $(workingDirCatalog)
  displayName: 'Docker compose down'    